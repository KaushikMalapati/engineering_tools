#! /usr/bin/env bash
usage()
{
    cat << EOF
usage: $0 options

we are starting another ami session here

OPTIONS:
-s: stop the ami client current running on this machine
-c: config file you'd like to use (i.e. cxi_test.cnf)
EOF
}

if [[ ($1 == "--help") || ($1 == "-h") ]]; then
    usage
    exit 0
fi

export STOP_AMI=0
while getopts "sc:" OPTION; do
    case "$OPTION" in
        s)
            stopami
            ;;
        c)
            CONFIG="$OPTARG"
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift "$((OPTIND - 1))"

if [[ $(whoami) != *'opr'* ]]; then
    echo "Please run ami from the operator account!"
    exit
fi

HUTCH=$(get_hutch_name)
EXPNAME=$(get_curr_exp)
CNFEXT=.cnf

if [[ $HUTCH == 'cxi' ]]; then
    if [[ $HOSTNAME == 'cxi-daq' ]]; then
        CNFEXT=_0.cnf
    elif [[ $HOSTNAME == 'cxi-monitor' ]]; then
        CNFEXT=_1.cnf
    elif [[ -z $CONFIG ]]; then
        echo 'You must provide cxi config file (-c) if not on daq machine'
        exit 1
    fi
fi

# If specified a config file, then use that
if [[ -z $CONFIG ]]; then
    CONFIG=$HUTCH$CNFEXT
fi

#
# this is XPP specific. Don't think we should have local plugins anyways,
# only release ones.
#
source /cds/group/pcds/setup/pathmunge.sh
if [[ $HUTCH == 'xpp' ]]; then
    ldpathmunge /cds/home/opr/xppopr/ami_plugins
elif [[ $HUTCH == 'xcs' ]]; then
    ldpathmunge /cds/home/opr/xcsopr/online/ami_plugins
fi

DAQHOST=$(wheredaq)
ami_base_path=$(grep ami_base_path /cds/group/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" | grep -v '#' | grep -v 'ami_base_path+' | awk 'BEGIN { FS = "=" }; { print $2}' | sed s/\'//g)
ami_path=$ami_base_path$(grep ami_path /cds/group/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" | grep -v 'ami_path+' | grep -v '#' | awk 'BEGIN { FS = "= " }; { print $2}' | sed s/ami_base_path+// | sed s/\'//g)

proxy_cds=$(/cds/group/pcds/dist/pds/"$HUTCH"/current/tools/procmgr/procmgr status /cds/group/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" | grep ami_proxy | awk '{print $1}' | sed s/'-fez'/''/g)

amicmd=$(grep ami_client /cds/group/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" | grep -v '#' | awk 'BEGIN { FS = ":" }; { print $4}' | sed s/ami_path//g | sed s/\'+proxy_cds/"$proxy_cds"/g | sed s:\'+expname:"$EXPNAME"/:g | sed s/+\'//g | sed s/\'\}\)//g)

if [[ $DAQHOST == *"$HOSTNAME" ]]; then # Check host and daq host line share host name...
    #running on the DAQ host, this will restart the ami_client!
    read -rp "Do you really intend to restart the ami_client on $DAQHOST? (y/n)"
    if [ "$REPLY" == "y" ]; then
        echo "Restarting the ami_client..."
        /cds/group/pcds/dist/pds/"$HUTCH"/current/tools/procmgr/procmgr stop \
            /cds/group/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" ami_client
        /cds/group/pcds/dist/pds/"$HUTCH"/current/tools/procmgr/procmgr start \
            /cds/group/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" -c 2000000000 -o /cds/group/pcds/pds/"$HUTCH"/logfiles ami_client
        exit
    else
        read -rp "Do you want to start a second client on the DAQ host $DAQHOST? (y/n)"
        if [ "$REPLY" == "n" ]; then
            exit
        else
            echo "Starting another ami_client on $DAQHOST , calling:"
        fi
    fi
else
    echo --- "connect to proxy on: $proxy_cds, calling:"
fi

echo "$ami_path$amicmd"
exec "$ami_path$amicmd&"
