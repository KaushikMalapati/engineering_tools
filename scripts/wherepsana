#!/bin/bash
usage()
{
    cat << EOF
usage: $0 [-h] [-c CONFIG] [-d]

Checks where we have shared memory servers for psana running
and could run psana jobs.

OPTIONS:
-h Show usage
-c Pick a specific DAQ config file rather than automatically selecting
current hutch's file
-d Also show information about dss node mapping
EOF
}

if [[ ($1 == "--help") || ($1 == "-h") ]]; then
    usage
    exit 0
fi

HUTCH=$(get_info --gethutch)
for i in "xpp" "xcs" "mfx" "cxi" "mec" "det"; do
    if [[ $HUTCH == "$i" ]]; then
        FOUNDHUTCH=1
        break
    fi
done
if [[ -z $FOUNDHUTCH ]]; then
    echo 'could not determine hutch or hutch not implemented, quit'
    exit
fi
export NOTRUNNING='Not running'

while getopts "c:d" OPTION; do
    case "$OPTION" in
        c)
            CONFIG="$OPTARG"
            ;;
        d)
            DETAIL="1"
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift "$((OPTIND - 1))"

# If specified a config file, then use that
if [[ -z $CONFIG ]]; then

    CNFEXT=.cnf

    if [[ $HUTCH == 'cxi' ]]; then
        if [[ $HOSTNAME == 'cxi-daq' ]]; then
            CNFEXT=_0.cnf
        elif [[ $HOSTNAME == 'cxi-monitor' ]]; then
            CNFEXT=_1.cnf
        elif [[ -z $CONFIG ]]; then
            echo 'You must provide cxi config file (-c) if not on daq machine'
            exit 1
        fi
    fi

    CONFIG=$HUTCH$CNFEXT
fi

#create a tempoprary file with the procStatus so we only call that once;
/reg/g/pcds/dist/pds/"$HUTCH"/current/tools/procmgr/procmgr status /reg/g/pcds/dist/pds/"$HUTCH"/scripts/"$CONFIG" > /tmp/procServStatus.$$

mapfile -t PSANA_NODES < <(grep monreqsrvpsana /tmp/procServStatus.$$ | awk '{print $1}')
if [[ -z $DETAIL ]]; then
    NODESTR=''
    for ((idx = 0; idx < ${#PSANA_NODES[@]}; ++idx)); do
        NODESTR=$NODESTR${PSANA_NODES[idx]}','
    done
    echo "${NODESTR::-1}"
else
    mapfile -t EVENT < <(grep event /tmp/procServStatus.$$ | awk '{print $1}')
    mapfile -t PSANA_MASKS < <(grep monreqsrvpsana /tmp/procServStatus.$$ | awk -F "-i " '{print $2}' | awk '{print $1}')
    mapfile -t EVENT_MASKS < <(grep event /tmp/procServStatus.$$ | awk -F "-s " '{print $2;}' | awk '{print lshift(1,$1);}')
    echo 'psana runs on the following nodes looking at event nodes '${#EVENT[@]}
    NODESTR=''
    for ((idx = 0; idx < ${#PSANA_NODES[@]}; ++idx)); do
        echo -n "${PSANA_NODES[idx]}:"
        MASKS=${PSANA_MASKS[idx]}
        for ((m = 0; m < ${#EVENT[@]}; ++m)); do
            if [ $((MASKS & EVENT_MASKS[m])) != 0 ]; then
                echo -n "${EVENT[m]}"
                MASKS=$((MASKS & ~EVENT_MASKS[m]))
            fi
        done
        if [[ ${MASKS} != '0' ]]; then
            echo "MISSING MON MASK: $MASKS"
        fi
        echo ""
    done

fi

rm /tmp/procServStatus.$$
